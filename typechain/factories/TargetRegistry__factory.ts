/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  TargetRegistry,
  TargetRegistryInterface,
} from "../TargetRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_originContract",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_originDomain",
        type: "uint32",
      },
      {
        internalType: "contract IConnextHandler",
        name: "_connext",
        type: "address",
      },
      {
        internalType: "address",
        name: "_priceFeed",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requested",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "received",
        type: "uint256",
      },
    ],
    name: "NotEnoughFunds",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "UserAlreadyRegistered",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "UpdateCompleted",
    type: "event",
  },
  {
    inputs: [],
    name: "executor",
    outputs: [
      {
        internalType: "contract IExecutor",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "myWalletWasStolen",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "originContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "originDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicGoodsRegistrationFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stolenWalletRegistry",
    outputs: [
      {
        internalType: "contract IStolenWalletRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "value",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600380546001600160a01b03191673f5a2c39a7675795741b44d4a5ca49d46c6d81daf179055674563918244f4000060055534801561004257600080fd5b506040516107c73803806107c783398101604081905261006191610144565b600180546001600160a01b038681166001600160c01b031990921691909117600160a01b63ffffffff871602179091556040805163c34c08e560e01b815290519184169163c34c08e5916004808201926020929091908290030181865afa1580156100d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100f491906101ac565b600280546001600160a01b039283166001600160a01b03199182161790915560048054939092169216919091179055506101d0915050565b6001600160a01b038116811461014157600080fd5b50565b6000806000806080858703121561015a57600080fd5b84516101658161012c565b602086015190945063ffffffff8116811461017f57600080fd5b60408601519093506101908161012c565b60608601519092506101a18161012c565b939692955090935050565b6000602082840312156101be57600080fd5b81516101c98161012c565b9392505050565b6105e8806101df6000396000f3fe6080604052600436106100705760003560e01c80638ca4f0c91161004e5780638ca4f0c9146100c95780639afb416c14610101578063c34c08e514610121578063cee85d7e1461014157600080fd5b80630deb8b9014610075578063173565511461009e5780633fa4f245146100b3575b600080fd5b34801561008157600080fd5b5061008b60055481565b6040519081526020015b60405180910390f35b6100b16100ac3660046104c1565b61017a565b005b3480156100bf57600080fd5b5061008b60005481565b3480156100d557600080fd5b506003546100e9906001600160a01b031681565b6040516001600160a01b039091168152602001610095565b34801561010d57600080fd5b506001546100e9906001600160a01b031681565b34801561012d57600080fd5b506002546100e9906001600160a01b031681565b34801561014d57600080fd5b5060015461016590600160a01b900463ffffffff1681565b60405163ffffffff9091168152602001610095565b60015460408051632b59241f60e01b815290516001600160a01b03909216913391632b59241f91600480830192602092919082900301816000875af11580156101c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101eb91906104e5565b6001600160a01b03161480156102815750600160149054906101000a900463ffffffff1663ffffffff16336001600160a01b031663938b5f326040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610255573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102799190610502565b63ffffffff16145b801561029757506002546001600160a01b031633145b61030e5760405162461bcd60e51b815260206004820152603c60248201527f4578706563746564206f726967696e20636f6e7472616374206f6e206f72696760448201527f696e20646f6d61696e2063616c6c6564206279204578656375746f720000000060648201526084015b60405180910390fd5b80610317610419565b60055461032c90670de0b6b3a7640000610528565b6103369190610555565b341015610363576005546040516311920a6d60e31b81526004810191909152346024820152604401610305565b600354604051631da9243f60e11b81526001600160a01b03848116600483015290911690633b52487e906024016020604051808303816000875af11580156103af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d39190610577565b50604080513381526001600160a01b03841660208201527f45db25bb5af83914fab34a211263e1008e46cdc28bbd656f0134a3d80a1163f7910160405180910390a15050565b6000600460009054906101000a90046001600160a01b03166001600160a01b0316638e15f4736040518163ffffffff1660e01b8152600401602060405180830381865afa15801561046e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104929190610599565b6104a490670de0b6b3a7640000610528565b905090565b6001600160a01b03811681146104be57600080fd5b50565b6000602082840312156104d357600080fd5b81356104de816104a9565b9392505050565b6000602082840312156104f757600080fd5b81516104de816104a9565b60006020828403121561051457600080fd5b815163ffffffff811681146104de57600080fd5b600081600019048311821515161561055057634e487b7160e01b600052601160045260246000fd5b500290565b60008261057257634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561058957600080fd5b815180151581146104de57600080fd5b6000602082840312156105ab57600080fd5b505191905056fea2646970667358221220af8ffcb9545ffbb17a42b221821504c3614dba5c437e4cacd9bfbab9902d564064736f6c634300080f0033";

type TargetRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TargetRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TargetRegistry__factory extends ContractFactory {
  constructor(...args: TargetRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _originContract: PromiseOrValue<string>,
    _originDomain: PromiseOrValue<BigNumberish>,
    _connext: PromiseOrValue<string>,
    _priceFeed: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TargetRegistry> {
    return super.deploy(
      _originContract,
      _originDomain,
      _connext,
      _priceFeed,
      overrides || {}
    ) as Promise<TargetRegistry>;
  }
  override getDeployTransaction(
    _originContract: PromiseOrValue<string>,
    _originDomain: PromiseOrValue<BigNumberish>,
    _connext: PromiseOrValue<string>,
    _priceFeed: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _originContract,
      _originDomain,
      _connext,
      _priceFeed,
      overrides || {}
    );
  }
  override attach(address: string): TargetRegistry {
    return super.attach(address) as TargetRegistry;
  }
  override connect(signer: Signer): TargetRegistry__factory {
    return super.connect(signer) as TargetRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TargetRegistryInterface {
    return new utils.Interface(_abi) as TargetRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TargetRegistry {
    return new Contract(address, _abi, signerOrProvider) as TargetRegistry;
  }
}
